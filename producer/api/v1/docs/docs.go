// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Palembang Digital",
            "url": "https://palembangdigital.org",
            "email": "support@palembangdigital.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/players": {
            "get": {
                "description": "Get the list of players",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "List players",
                "operationId": "list-players",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Player"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Create a new player",
                "operationId": "create-player",
                "parameters": [
                    {
                        "description": "Create player",
                        "name": "player",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    }
                }
            }
        },
        "/players/{id}": {
            "put": {
                "description": "Update an player",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Update an player",
                "operationId": "update-player",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update player",
                        "name": "player",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an player by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Delete an player",
                "operationId": "delete-player",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/players/{team_id}": {
            "get": {
                "description": "Get the list of players by team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "List players by team",
                "operationId": "list-players-team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Player"
                            }
                        }
                    }
                }
            }
        },
        "/players/{team_id}/detail/{id}": {
            "get": {
                "description": "Get an player by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get an player",
                "operationId": "get-player",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "description": "Get the list of teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "List teams",
                "operationId": "list-teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Team"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create a new team",
                "operationId": "create-team",
                "parameters": [
                    {
                        "description": "Create team",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    }
                }
            }
        },
        "/teams/{id}": {
            "get": {
                "description": "Get an team by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Get an team",
                "operationId": "get-team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an team",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Update an team",
                "operationId": "update-team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update team",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an team by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Delete an team",
                "operationId": "delete-team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Player": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-04-21T00:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "jersey_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-04-21T00:00:00Z"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-04-21T00:00:00Z"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-04-21T00:00:00Z"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Palembang Digital API",
	Description: "API documentation for palembangdigital.org",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
